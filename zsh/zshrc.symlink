# Path to your oh-my-zsh installation.
export ZSH=/Users/hugomelo/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="awesomepanda"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

# User configuration

export PATH="/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:$PATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
export LANG=en_US.UTF-8

bindkey -v # Vi mode

bindkey "^R" history-incremental-search-backward # history search with ctrl-r

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
export PATH="/usr/local/bin:$PATH"
export PATH="~/Developer/go/bin:$PATH"
source ~/.dotfiles/zsh/completion.zsh
source ~/.dotfiles/go/path.zsh


# add rust things to path
export PATH="~/.cargo/bin:$PATH"

function rspec {
if [ ! -f ./bin/rspec ]; then
  bundle exec rspec "$@"
else
  ./bin/rspec "$@"
fi
}

function cucumber {
if [ ! -f ./bin/cucumber ]; then
  bundle exec cucumber "$@"
else
  ./bin/cucumber "$@"
fi
}

function rails {
if [ ! -f ./bin/rails ]; then
  bundle exec rails "$@"
else
  ./bin/rails "$@"
fi
}

function rake {
if [ ! -f ./bin/rake ]; then
  bundle exec rake "$@"
else
  ./bin/rake "$@"
fi
}

alias pgpg='psql -h localhost -U postgres' # psql -h localhost -U hugo -d brainstream_development
alias rust-update='curl -sf -L https://static.rust-lang.org/rustup.sh | sh'

export EDITOR=vim

function rusty {
rustc $1
NEW_BINARY=$(echo $1 | sed s/.rs//)
eval "./$NEW_BINARY"
rm "./$NEW_BINARY"
}

# removes file from git history
function git-remove {
  git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch $1' --prune-empty --tag-name-filter cat -- --all
}

# remove all the docker things
function docker-rm-all {
if [ "$(docker ps -aq)" -eq "" ]; then
  echo "No Containers"
else
  docker kill $(docker ps -aq)
  docker rm $(docker ps -aq)
fi

if [ "$(docker images -aq)" -eq "" ]; then
  echo "No Images"
else
  docker rmi -f $(docker images -aq)
fi
}

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting

# Colorizes man pages
man() {
  env \
      LESS_TERMCAP_mb=$(printf "\e[1;31m") \
      LESS_TERMCAP_md=$(printf "\e[1;31m") \
      LESS_TERMCAP_me=$(printf "\e[0m") \
      LESS_TERMCAP_se=$(printf "\e[0m") \
      LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
      LESS_TERMCAP_ue=$(printf "\e[0m") \
      LESS_TERMCAP_us=$(printf "\e[1;32m") \
          man "$@"
}

alias johny-the-robot='ssh hugo@162.243.70.245'

# Load nvm on new tab
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

# Just running that command will connect to your server and attach to an existing tmux session, or create a new one if needed, and make use of iTerm's tmux integration, so you can use the standard macOS keyboard commands (or the UI) to do things like switch tabs, make new tabs, close them, make new windows, etc. all using tmux and a single ssh connection. You can press 'esc' in the command window to detach from your session and when you return (just using that alias) all your work is just as you
# left it.
# ssh [your server] -t "tmux -CC attach || tmux -CC"


# b/c https://github.com/robbyrussell/oh-my-zsh/issues/31
alias curl='noglob curl'


alias brews='brew ls'
alias be='bundle exec'

alias serve='ruby -run -e httpd . -p 9090'
